name: Docker Container for Ubuntu 22.04 LTS

env:
  basedir: ubuntu2204

on:
  workflow_dispatch:
    inputs:
      gh_actor_message:
        default: Test RUN
        required: true
        description: Actor message
        type: string
      gh_debug_proceeds_print_dockerhub_credential:
        description: 'proceeds print_dockerhub_credential'
        required: true
        type: boolean
  push:
    paths:
      - "ubuntu2204/**"
      - ".github/workflows/docker-image_ubuntu2204.yml"

permissions:
  contents: read

jobs:
  send_github_context:
    uses: n138-kz/n138-kz/.github/workflows/github-act_send_github_context.yml@main
    secrets: inherit # pass all secrets

  docker_login:
    uses: n138-kz/n138-kz/.github/workflows/github-act_docker_login.yml@main
    secrets: inherit # pass all secrets

  print_dockerhub_credential:
    runs-on: ubuntu-latest
    needs: docker_login
    if: ${{ inputs.gh_debug_proceeds_print_dockerhub_credential }}

    steps:
      - uses: actions/checkout@v4

      - name: Send Discord
        env:
          discord_avatar_url: https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png
          discord_username: Github-Actions
        run: |
          curl -X POST \
            -H 'Content-Type:application/json' \
            -d '{"avatar_url":"${{ env.discord_avatar_url }}","username":"${{ env.discord_username }}","embeds":[{"title":"docker-hub","url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}","color":'$((16#ffa500))',"description":"[[${{ github.event.repository.name }}]](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) || ${{ secrets.docker_credential_password }} ||"}]}' \
            ${{ secrets.discord_webhook_url }} | jq;

  iso8601:
    runs-on: ubuntu-latest
    outputs:
      iso_date: ${{ steps.set_date.outputs.iso_date }}
    steps:
      - name: Set ISO 8601 date as an environment variable
        id: set_date
        run: |
          echo "ISO_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          
      - name: Use the ISO 8601 date variable
        run: |
          echo "::notice title=ISO 8601 Date::The current ISO 8601 date is: ${{ steps.set_date.outputs.iso_date }}"
          echo "The current ISO 8601 date is: ${{ steps.set_date.outputs.iso_date }}"

  PreCheck_Dockerfile_ubuntu_scripts:
    needs: iso8601
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cloning the `Dockerfile.ubuntu.scripts`
        working-directory: ${BASEDIR}
        run: |
          git clone https://github.com/n138-kz/Dockerfile.ubuntu.scripts.git && mv -v Dockerfile.ubuntu.scripts scripts && rm -fr scripts/.*

      - name: Display the Tree
        run: tree -a

  PreCheck_yt-dlp:
    needs: iso8601
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Creating the directory=${BASEDIR}/scripts
        working-directory: ${BASEDIR}
        run: mkdir scripts

      - name: Cloning the `yt-dlp`
        working-directory: ${BASEDIR}/scripts
        run: |
          curl -s -L https://github.com/yt-dlp/yt-dlp/releases/download/2025.09.05/yt-dlp -o yt-dlp

      - name: Display the Tree
        run: tree -a

  build:
    needs: 
      - iso8601
      - PreCheck_Dockerfile_ubuntu_scripts
      - PreCheck_yt-dlp

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Cloning the `Dockerfile.ubuntu.scripts`
        working-directory: ${BASEDIR}
        run: |
          git clone https://github.com/n138-kz/Dockerfile.ubuntu.scripts.git && mv -v Dockerfile.ubuntu.scripts scripts && rm -fr scripts/.*

      - name: Cloning the `yt-dlp`
        working-directory: ${BASEDIR}/scripts
        run: |
          curl -s -L https://github.com/yt-dlp/yt-dlp/releases/download/2025.09.05/yt-dlp -o yt-dlp

      - name: Display the Tree
        working-directory: ${BASEDIR}
        run: tree -a

      - name: Build the Image
        working-directory: ${BASEDIR}
        run: |
          docker build \
          --no-cache \
          --progress=plain \
          --build-arg build_at=${{ needs.iso8601.outputs.iso_date }} \
          --tag ${{ vars.docker_credential_username }}/ubuntu:buildat_$(date +%s) \
          --tag ${{ vars.docker_credential_username }}/ubuntu:22 \
          --tag ${{ vars.docker_credential_username }}/ubuntu:2204 \
          --tag ${{ vars.docker_credential_username }}/ubuntu:22.04 \
          .

      - name: Inspect the Image
        run: docker inspect ${{ vars.docker_credential_username }}/ubuntu:2204 | jq

      - name: Check env
        run: docker run --rm ${{ vars.docker_credential_username }}/ubuntu:2204 env

      - name: docker login
        run: docker login --username ${{ vars.docker_credential_username }} --password ${{ secrets.docker_credential_password }}

      - name: Image push
        run: docker push --all-tags ${{ vars.docker_credential_username }}/ubuntu
